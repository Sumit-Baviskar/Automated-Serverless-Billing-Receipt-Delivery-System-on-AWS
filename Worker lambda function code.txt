import boto3
import json
import os
from datetime import datetime

# Create AWS clients
ses = boto3.client("ses")
s3 = boto3.client("s3")

# Get sender email from environment variables
SENDER_EMAIL = os.environ["SENDER_EMAIL"]
BUCKET_NAME = "******"  # ✅ Only bucket name, no s3:// prefix

def lambda_handler(event, context):
    try:
        # Process each SQS message
        for record in event["Records"]:
            # Parse JSON message body
            message = json.loads(record["body"])
            customer_name = message["customer_name"]
            email = message["email"]
            services = message["services"]

            # Calculate total charges for this customer
            total_charges = sum(service["charges"] for service in services)

            # Build plain-text email body
            body_text = f"""Hi {customer_name},

Thank you for choosing [Your Company Name]!
Here’s a summary of the services you used in Last Month:

--------------------------------------------------------
Service Name         | Amount (USD)
--------------------------------------------------------
"""

            # Add each service row
            for svc in services:
                body_text += f"{svc['service_name']:<20} | ${svc['charges']:.2f}\n"

            # Add total and closing text
            body_text += f"""--------------------------------------------------------
Total Charges        | ${total_charges:.2f}
--------------------------------------------------------

Your support enables us to keep providing you with top-notch services.
If you have any questions about your bill or need assistance, feel free to reply to this email or contact our support team.

Thank you for your continued trust!

Best regards,
[Your Company Name] Billing Team
xxxxxxxxx@company.com | xxxxxxhelp@support.com
"""

            # Save email text as a file to S3
            file_name = f"{message['customer_id']}_{datetime.now().strftime('%Y-%m-%d_%H-%M-%S')}.txt"
            s3.put_object(
                Bucket=BUCKET_NAME,
                Key=file_name,
                Body=body_text.encode("utf-8")
            )
            print(f"📄 Saved email text to S3 bucket: {BUCKET_NAME}/{file_name}")

            # Send email using AWS SES
            ses.send_email(
                Source=SENDER_EMAIL,
                Destination={"ToAddresses": [email]},
                Message={
                    "Subject": {"Data": "Your Monthly Service Receipt - July 2025"},
                    "Body": {
                        "Text": {"Data": body_text}
                    }
                }
            )
            print(f"✅ Email sent successfully to: {customer_name} ({email})")

        # Return success response
        return {
            "statusCode": 200,
            "body": "✅ All SQS messages processed, emails sent, and text files saved to S3 successfully."
        }

    except Exception as e:
        # Log any errors
        print(f"❌ Error: {str(e)}")
        return {
            "statusCode": 500,
            "body": f"❌ Error processing SQS messages: {str(e)}"
        }